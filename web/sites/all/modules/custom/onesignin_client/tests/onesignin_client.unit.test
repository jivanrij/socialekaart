<?php
// $Id: $

/**
 * @file
 * Unit tests some separate functions from the client module.
 */

// @todo file does not exist in this repository.
//require_once dirname(__FILE__) . '../../../tests/onesignin.unit.test';
//
//class OneSigninClientUnitTest extends OneSigninUnitTestCase {
//
//  public static function getInfo() {
//    return array(
//      'name' => t('Unit tests (client)'),
//      'description' => t('Performs several input/output tests on key functions in the One Signin client module.'),
//      'group' => t('One Sign-in'),
//      'dependencies' => array(
//        'onesignin_client',
//      ),
//    );
//  }
//
//  /**
//   * Set up the test by including the install.inc for use of the st() function.
//   */
//  public function setUp() {
//    $this->hash_function = 'onesignin_client_hash';
//    drupal_load('module', 'onesignin_client');
//    module_load_include('inc', 'onesignin_client');
//    parent::setUp();
//  }
//
//  /**
//   * Tiny test for checking for hash creation differences between server and
//   * client. This test is not necessarily for checking the correctness of the
//   * output but purely for avoiding differences in hash generation.
//   */
//  public function testHashGeneration() {
//    module_load_include('inc', 'onesignin_client');
//
//    $checks = array(
//      array(1, 2, 3),
//      array("1", "2", "3"),
//      TRUE,
//      FALSE,
//      NULL,
//      0,
//      1,
//      'simple but long string testing used for checking for overloading in either one of the module hash function ' . $this->randomString(1024),
//      $this->randomString(64),
//    );
//
//    foreach ($checks as $check) {
//      //$this->assertIdentical(onesignin_client_hash($check), onesignin_client_hash($check));
//    }
//  }
//
//  /**
//   * Tests the Bot/Crawler check in the client module using a set of semi-
//   * randomly selected user agents that reach a large range in weird user
//   * agents for both actual browsers and bots.
//   */
//  public function testBot() {
//    $original_agent = (isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : '');
//
//    // In the form of 'user agent string' => expected result.
//    $user_agents = array(
//      'Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3 (.NET CLR 3.5.30729)' => FALSE,
//      'ArabyBot (compatible; Mozilla/5.0; GoogleBot; FAST Crawler 6.4; http://www.araby.com;)' => TRUE,
//      'Apple-PubSub/65.1.1' => TRUE,
//      'Baiduspider+(+http://help.baidu.jp/system/05.html)' => TRUE,
//      'Feedfetcher-Google-iGoogleGadgets; (+http://www.google.com/feedfetcher.html)' => TRUE,
//      'Googlebot-Image/1.0' => TRUE,
//      'Mozilla/5.0 (compatible; Googlebot/2.1; http://www.google.com/bot.html)' => TRUE,
//      'ia_archiver-web.archive.org' => TRUE,
//      'Mozilla/5.0 (compatible;archive.org_bot/heritrix-1.9.0-200608171144 +http://pandora.nla.gov.au/crawl.html)' => TRUE,
//      'IlseBot/1.x' => TRUE,
//      'Mozilla/5.0 (Slurp/si; slurp@inktomi.com; http://www.inktomi.com/slurp.html)' => TRUE,
//      'Mediapartners-Google/2.1 ( http://www.googlebot.com/bot.html)' => TRUE,
//      'Microsoft Small Business Indexer' => TRUE,
//      'Mozilla/2.0 (compatible; Ask Jeeves/Teoma)' => TRUE,
//      'Mozilla/3.0 (Vagabondo/1.1 MT; webcrawler@NOSPAMwise-guys.nl; http://webagent.wise-guys.nl/)' => TRUE,
//      'Mozilla/3.0 (Vagabondo/1.x MT; webagent@wise-guys.nl; http://webagent.wise-guys.nl/)' => TRUE,
//      'Mozilla/5.0 (compatible; Vagabondo/2.1; webcrawler at wise-guys dot nl; http://webagent.wise-guys.nl/)' => TRUE,
//      'Mozilla/4.0 (compatible; MSIE 5.0; YANDEX)' => TRUE,
//      'Mozilla/4.0 (compatible; SPENG)' => TRUE,
//      'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT; MS Search 4.0 Robot)' => TRUE,
//      'Mozilla/4.0 (MobilePhone SCP-5500/US/1.0) NetFront/3.0 MMP/2.0 (compatible; Googlebot/2.1; http://www.google.com/bot.html)' => TRUE,
//      'Mozilla/4.0_(compatible;_MSIE_5.0;_Windows_95)_VoilaBot/1.6 libwww/5.3.2' => TRUE,
//      'Mozilla/4.0_(compatible;_MSIE_5.0;_Windows_95)_TrueRobot/1.4 libwww/5.2.8' => TRUE,
//      'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.2.1; aggregator:Spinn3r (Spinn3r 3.1); http://spinn3r.com/robot) Gecko/20021130' => TRUE,
//      'Scooter-3.2.EX' => TRUE,
//      'WWW-Mechanize/1.1x' => TRUE,
//      'YahooSeeker/1.0 (compatible; Mozilla 4.0; MSIE 5.5; http://help.yahoo.com/help/us/shop/merchant/)' => TRUE,
//      'YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)' => TRUE,
//      'Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)' => TRUE,
//      'msnbot/1.1 (+http://search.msn.com/msnbot.htm)' => TRUE,
//      'Mozilla/5.0 (compatible; 008/0.83; http://www.80legs.com/webcrawler.html) Gecko/2008032620' => TRUE,
//
//      'Mozilla/5.0 (compatible; Konqueror/2.1.1; X11)' => FALSE,
//      'Mozilla/4.0 (MobilePhone PM-8200/US/1.0) NetFront/3.x MMP/2.0' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 5.0; Mac_PowerPC; AtHome021)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; Hotbar 3.0)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)' => FALSE,
//      'Mozilla/5.0 (Windows; U; Win98; en-US; rv:x.xx) Gecko/20030423 Firebird Browser/0.6' => FALSE,
//      'Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.7.6) Gecko/20050405 Epiphany/1.6.1 (Ubuntu) (Ubuntu package 1.0.2)' => FALSE,
//      'Opera/9.60 (Windows NT 5.1; U; de) Presto/2.1.1' => FALSE,
//      'Mozilla/5.0 (Windows NT 6.0; WOW64) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.36 Safari/535.7' => FALSE,
//      'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; Media Center PC 6.0; InfoPath.3; MS-RTC LM 8; Zune 4.7' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.1; .NET CLR 1.1.4322; Alexa Toolbar)' => FALSE,
//      'Mozilla/5.0 (compatible; MSIE 7.0; Windows 98; SpamBlockerUtility 6.3.91; SpamBlockerUtility 6.2.91; .NET CLR 4.1.89;GB)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 6.0b; Windows NT 5.0; YComp 5.0.0.0) (Compatible; ; ; Trident/4.0)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB6.5; QQDownload 534; Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) ; SLCC2; .NET CLR 2.0.50727; Media Center PC 6.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729)' => FALSE,
//      'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 6.1; chromeframe/12.0.742.100; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C)' => FALSE,
//      'Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc' => FALSE,
//      'Mozilla/4.0 (PSP (PlayStation Portable); 2.00)' => FALSE,
//      'Mozilla/5.0 (Linux; U; Android 2.3.3; zh-tw; HTC Pyramid Build/GRI40) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1' => FALSE,
//      'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-US) AppleWebKit/528.16 (KHTML, like Gecko, Safari/528.16) OmniWeb/v622.8.0' => FALSE,
//      'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.24 (KHTML, like Gecko) RockMelt/0.9.58.494 Chrome/11.0.696.71 Safari/534.24' => FALSE,
//      'BlackBerry9700/5.0.0.862 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/331 UNTRUSTED/1.0 3gpp-gba' => FALSE,
//      'SAMSUNG-C5212/C5212XDIK1 NetFront/3.4 Profile/MIDP-2.0 Configuration/CLDC-1.1' => FALSE,
//      'SonyEricssonK530c/R8BA Browser/NetFront/3.3 Profile/MIDP-2.0 Configuration/CLDC-1.1' => FALSE,
//      'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Epiphany/2.14 Firefox/1.5.0.5' => FALSE,
//    );
//
//    foreach ($user_agents as $agent_string => $expected) {
//      $_SERVER['HTTP_USER_AGENT'] = $agent_string;
//      $is_bot = onesignin_client_ignore_bot();
//      $this->assertIdentical($is_bot, $expected, $this->t('Bot user agent check returned <code>@result</code> for user agent "@agent" where <code>@expected</code> was expected.', array(
//        '@result' => var_export($is_bot, TRUE),
//        '@agent' => $agent_string,
//        '@expected' => var_export($expected, TRUE),
//      )));
//    }
//
//    $_SERVER['HTTP_USER_AGENT'] = $original_agent;
//  }
//}
