<?php

// todo make autoloader
include('inc/ClassQantani.php');
include('inc/Mollie/API/Autoloader.php');

include('gojira_settings.php');
include('php/helper.php');
include('php/actions.php');
include('php/api/api.php');
include('php/Postcode.class.php');
include('php/Subscriptions.class.php');
include('php/Reporter.class.php');
include('php/Template.class.php');
include('php/Category.class.php');
include('php/Labels.class.php');
include('php/Location.class.php');
include('php/Group.class.php');
include('php/Map.class.php');
include('php/Favorite.class.php');
include('php/Importer.class.php');
include('php/Search.class.php');
include('php/BIG.class.php');
include('php/Mailer.class.php');
include('php/MailerHtml.class.php');
include('php/Locationsets.class.php');
include('php/Mobile_Detect.php');
include('php/Messages.class.php');
include('php/actions/ownlist.php');
include('php/actions/checklocation.php');
include('php/actions/paymentconditions.php');
include('php/actions/tools.php');
include('php/actions/docu.php');
include('php/actions/websites.php');
include('php/actions/configuration.php');
include('php/actions/questions.php');
include('php/actions/favorites.php');
include('php/actions/practicecheck.php');
include('php/actions/conditions.php');
include('php/actions/locationinfo.php');
include('php/actions/locationcrud.php');
include('php/actions/locationsetlist.php');
include('php/actions/editnote.php');
include('php/actions/doublelocations.php');
include('php/actions/gojirasearch.php');
include('php/actions/inform.php');
include('php/actions/reportdouble.php');
include('php/actions/informthanks.php');
include('php/actions/activateuser.php');
include('php/actions/showlocation.php');
include('php/actions/grouplist.php');
include('php/actions/groupdetail.php');
include('php/actions/likelabel.php');
include('php/actions/locationcheck.php');
include('php/actions/locationdelete.php');
include('php/actions/locationedit.php');
include('php/actions/locationcorrect.php');
include('php/actions/locationlist.php');
include('php/actions/locationtags.php');
include('php/actions/linkhaweb.php');
include('php/actions/passwordthanks.php');
include('php/actions/picklocation.php');
include('php/actions/postcodesuggest.php');
include('php/actions/register.php');
include('php/actions/error.php');
include('php/actions/registered.php');
include('php/actions/passwordmailsend.php');
include('php/actions/removelabel.php');
include('php/actions/savenewlabel.php');
include('php/actions/search.php');
include('php/actions/subscribe.php');
include('php/actions/idealreturn.php');
include('php/actions/idealpay.php');
include('php/actions/idealcallback.php');
include('php/actions/idealsuccess.php');
include('php/actions/idealfail.php');
include('php/actions/idealreport.php');
include('php/actions/crudtest.php');
include('php/actions/setfavorite.php');
include('php/actions/setonlocationset.php');
include('php/actions/settings.php');
include('php/actions/settings_thanks.php');
include('php/actions/showtutorial.php');
include('php/actions/suggestlocation.php');
include('php/actions/suggestlocationthanks.php');
include('php/actions/singlesearchresult.php');
include('php/actions/switchglobalsearch.php');
include('php/actions/unlikelabel.php');
include('php/actions/passwordreset.php');
include('php/actions/welcome.php');
include('php/actions/doublehandler_checked.php');
include('php/actions/doublehandler_merge.php');
include('php/actions/doublehandler_remove.php');
include('php/forms/settings.php');
include('php/forms/locationedit.php');
include('php/forms/locationcorrect.php');
include('php/forms/suggestlocation.php');
include('php/forms/idealpay.php');
include('php/forms/inform.php');
include('php/forms/login.php');
include('php/forms/editnote.php');
include('php/forms/help.php');
include('php/forms/passwordreset.php');
include('php/forms/configuration.php');
include('php/forms/register.php');
include('php/forms/crudtest.php');
include('php/mails/mails.php');

$models = array(
    'Factory',
    'Location',
    'Locationset',
    'User',
    'Vocabulary',
);
foreach ($models as $model) {
    include(sprintf('php/models/%s.php', $model));
}

function gojira_permission()
{
    return array(
        helper::PERM_BASIC_ACCESS => array(
            'title' => t('Basic access'),
            'description' => t('User is able to use the basics of the system.'),
        ),
        helper::PERM_HUISARTS_LABELS => array(
            'title' => t('Work with basic labels'),
            'description' => t('User is able to use the basic huisartsen labels.'),
        ),
        helper::PERM_HUISARTS_PAYMENT => array(
            'title' => t('Do payments'),
            'description' => t('Is able to make payments.'),
        ),
        helper::PERM_HUISARTS_MORE_PRACTICES => array(
            'title' => t('Multiple locations'),
            'description' => t('The user can manage multiple practices.'),
        ),
        helper::PERM_CORRECT_LOCATION => array(
            'title' => t('Correct locations'),
            'description' => t('The user can change existing locations in the frontend.'),
        ),
        helper::PERM_ADD_LOCATION => array(
            'title' => t('Add locations'),
            'description' => t('The user can add locations in the frontend.'),
        ),
        helper::PERM_MY_MAP => array(
            'title' => t('Personal map'),
            'description' => t('These users can manage there personal map.'),
        ),
        helper::PERM_MANAGE_MAPS => array(
            'title' => t('Kaarten beheren'),
            'description' => t('These users can manage extra maps.'),
            )
        );
}

    // remove some javascripts that cause havoc on the frontend
    function gojira_js_alter(&$javascript)
    {
        if (!path_is_admin(current_path())) {
            unset(
            $javascript['misc/textarea.js'],
            $javascript['modules/system/system.js'],
            $javascript['misc/jquery.cookie.js'],
            $javascript['modules/toolbar/toolbar.js'], // <- gave error
            $javascript['misc/form.js']
        );
        }
    }

function gojira_css_alter(&$css)
{
    if (!path_is_admin(current_path())) {
        unset(
            $css['modules/system/system.theme.css']
        );
    }
}


function gojira_init()
{

    global $user;

    Reporter::reportThis();

    if (!user_is_logged_in() && (helper::getIEVersion() == 8 or helper::getIEVersion() == 9)) {
        drupal_add_js(array('gojira' => array('browserwarning' => 1)), 'setting');
    }

    drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/normalize.css');

    if (!user_is_logged_in() || $_GET['q'] == 'error' || $_GET['q'] == 'conditions') {
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/frontpage.js');
        drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/frontpage.css');
    }

    if ($_GET['q'] == 'welcome' && !user_is_logged_in()) {
        drupal_set_title('Welcome');
    }

    drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/font-awesome-4.5.0/css/font-awesome.min.css');

    if (Template::shouldWeIncludeMapFrontendFiles()) {

        // 0 i'm viewing the global map, -1 my map, and > 0 means viewing a locationset
        drupal_add_js(array('gojira' => array('selected_map' => 0)), 'setting');

        drupal_add_js(array('gojira' => array('mapbox_accesstoken' => variable_get('mapbox_accesstoken', ''))), 'setting');
        drupal_add_js(array('gojira' => array('mapbox_projectid' => variable_get('mapbox_projectid', ''))), 'setting');


        // collides with a backend include...
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/jquery-1.8.3.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/jquery-ui-1.9.2.custom.min.js');
        drupal_add_css(drupal_get_path('module', 'gojira') . '/css/smoothness/jquery-ui-1.9.2.custom.min.css', array('group' => CSS_DEFAULT, 'every_page' => true));
        drupal_add_css(drupal_get_path('module', 'gojira') . '/css/smoothness/gojira.jquery-ui-1.9.2.custom.css', array('group' => CSS_DEFAULT, 'every_page' => true));

        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/jquery.tokenize.js');
        drupal_add_css(drupal_get_path('module', 'gojira') . '/css/jquery.tokenize.css', array('group' => CSS_DEFAULT, 'every_page' => true));

        if (user_access('administer')) {
            drupal_add_js(array('gojira' => array('admin_link' => '<a href="/admin/config" title="Backend">Backend</a> | ')), 'setting');
        } else {
            drupal_add_js(array('gojira' => array('admin_link' => '')), 'setting');
        }

        drupal_add_css(drupal_get_path('module', 'gojira') . '/css/leaflet.css', array('group' => CSS_DEFAULT, 'every_page' => true));
        drupal_add_css(drupal_get_path('module', 'gojira') . '/css/colorbox.css', array('group' => CSS_DEFAULT, 'every_page' => true));

        preg_match('/MSIE (.*?);/', $_SERVER['HTTP_USER_AGENT'], $matches);
        if (count($matches)<2) {
            preg_match('/Trident\/\d{1,2}.\d{1,2}; rv:([0-9]*)/', $_SERVER['HTTP_USER_AGENT'], $matches);
        }
        if (count($matches)>1) {
            $version = $matches[1];

            switch (true) {
                case ($version<=8):
                drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/ie8_and_lower.css');
                break;

                case ($version==9):
                drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/ie9.css');
                break;

                case ($version==10):
                drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/ie10.css');
                break;

                case ($version==11):
                drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/ie11.css');
                break;
            }
        }

        $mobileDetect = new Mobile_Detect();

        if ($mobileDetect->isTablet()) {
            drupal_add_js(array('gojira' => array('tablet' => '1')), 'setting');
        } else {
            drupal_add_js(array('gojira' => array('tablet' => '0')), 'setting');
        }

        if (preg_match('/(?i)msie [1-8]/', $_SERVER['HTTP_USER_AGENT'])) {
            drupal_add_css(drupal_get_path('module', 'gojira') . '/css/leaflet.ie.css', array('group' => CSS_DEFAULT, 'every_page' => true));
        }

        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/jquery.colorbox-min.js');

        //  drupal_add_js(drupal_get_path('module', 'gojira') . '/js/google.maps.api.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/leaflet.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/leaflet.smoothmarkerbouncing.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/leaflet-google.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/functions.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/functions_locationset.js');
        drupal_add_js(drupal_get_path('module', 'gojira') . '/js/gojira.js');


        // some redirects for specific situations, are not allowed if you are logging out
        if (user_is_logged_in() && $_GET['q'] != 'user/logout' && !isset($_GET['pass-reset-token'])) {
            if (!helper::hasSeenTutorial()) {
                drupal_add_js(array('gojira' => array('show_tutorial' => 1)), 'setting');
            }

            if (count(Location::getUsersLocations(true))==0) {

                $userModel = \Models\User::load($user->uid);

                if(!$userModel->assureLocation()) {

                    // user is allowed to be in these routes without a location
                    $allowed_without_location = array(
                        'ajax/showtutorial',
                        'ajax/checklocation',
                        'ajax/postcodesuggest',
                        'locationcheck',
                        'location/edit',
                        'passwordthanks',
                        'settings'
                    );

                    if (!in_array($_GET['q'], $allowed_without_location) && !isset($_GET['pass-reset-token'])) {
                        // A) we have a user
                        // B) he has no location
                        // C) not on the settings page
                        // D) not on the conditionscheck page
                        // E) we are no admin
                        // F) not on the pass_reset_page
                        header('Location: /locationcheck');
                        exit;
                    }
                }
            }
        }

        drupal_add_js(array('gojira' => array('doSearch' => 0)), 'setting');
        if (isset($_GET['s'])) {
            drupal_add_js(array('gojira' => array('doSearch' => $_GET['s'])), 'setting');
        } else {
            if($_GET['q'] == 'welcome' && !isset($_GET['loc'])) {
                $userModel = \Models\User::loadCurrent();
                $locationModel = $userModel->getCurrentPractice();
                if (!empty($locationModel->object->field_address_city[LANGUAGE_NONE][0]['value'])) {
                    drupal_add_js(array('gojira' => array('doSearch' => $locationModel->object->field_address_city[LANGUAGE_NONE][0]['value'])), 'setting');
                }
            }
        }

        drupal_add_js(array('gojira' => array('showLoc' => 0)), 'setting');
        if (isset($_GET['loc']) && is_numeric($_GET['loc'])) {
            drupal_add_js(array('gojira' => array('showLoc' => $_GET['loc'])), 'setting');
        }

        if (isset($_GET['search_type'])) {
            $user = user_load($user->uid);
            $field = GojiraSettings::CONTENT_TYPE_SEARCH_GLOBAL_FIELD;
            $fieldValue = $user->$field;
            if ($_GET['search_type'] == 'region') {
                $fieldValue[LANGUAGE_NONE][0]['value'] = 0;
            } else {
                $fieldValue[LANGUAGE_NONE][0]['value'] = 1;
            }
            $user->$field = $fieldValue;
            user_save($user);
        }

        Map::setMapInfo($_GET['q']);

        drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/gojira.css');
    } else {
        drupal_add_css(drupal_get_path('theme', 'gojiratheme') . '/css/gojira_bootstrap.css');
    }

    // add meta tags and description if it's a public page
    if (arg(0) == 'node' && is_numeric(arg(1))) {
        $oNode = node_load(arg(1));
        if ($oNode->type == GojiraSettings::CONTENT_TYPE_PAGE_PUBLIC) {
            $sDescription = helper::value($oNode, GojiraSettings::CONTENT_TYPE_META_DESCRIPTION_FIELD);
            $sTags = helper::value($oNode, GojiraSettings::CONTENT_TYPE_META_TAGS_FIELD);
            $data = array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'description',
                    'content' => $sDescription,
                ),
            );
            drupal_add_html_head($data, 'description_meta');
            $data = array(
                '#tag' => 'meta',
                '#attributes' => array(
                    'name' => 'tags',
                    'content' => $sTags,
                ),
            );
            drupal_add_html_head($data, 'tags_meta');
        }
    } elseif (isset($_GET['q']) && $_GET['q'] == 'welcome' && !user_is_logged_in()) {
        $data = array(
            '#tag' => 'meta',
            '#attributes' => array(
                'name' => 'description',
                'content' => variable_get('meta_global_description'),
            ),
        );
        drupal_add_html_head($data, 'description_meta');
        $data = array(
            '#tag' => 'meta',
            '#attributes' => array(
                'name' => 'tags',
                'content' => variable_get('meta_global_tags'),
            ),
        );
        drupal_add_html_head($data, 'tags_meta');
    }
}

// after update
function gojira_entity_update($entity, $type)
{
    // after inserting a new location
    if (isset($entity->type) && $type == 'node' && $entity->type == GojiraSettings::CONTENT_TYPE_LOCATION) {
        Search::getInstance()->updateSearchIndex($entity->nid);
        if (variable_get('gojira_check_coordinates_on_update_node', 1)) {
            if ($entity->status == 1) {
                Location::checkAndSaveLocation($entity); // TODO TURN ON turned off for import
            }
        }
    }
}

// register the post save function
function gojira_node_insert($node)
{
    // after inserting a new location
    if (isset($node->type) && $node->type == GojiraSettings::CONTENT_TYPE_LOCATION) {
        register_shutdown_function('_gojira_post_insert', $node->nid);
    }
}

// created post save function
function _gojira_post_insert($iNode)
{
    Search::getInstance()->updateSearchIndex($iNode);
    if (variable_get('gojira_check_coordinates_on_update_node', 1)) {
        Location::checkAndSaveLocation(node_load($iNode)); // TODO TURN ON turned off for import
    }
}

function gojira_user_login(&$edit, $account)
{

    // reset the search global & search favorites field @ login
    // by remiving this, remember! -> put it to 0 when unsubscribing..
    $searchGlobalField = GojiraSettings::CONTENT_TYPE_SEARCH_GLOBAL_FIELD;
    $account->$searchGlobalField = array(LANGUAGE_NONE => array(0 => array('value' => 0)));

    user_save($account);

    if (!strstr($_GET['q'], 'user/reset')) {
        drupal_goto('/');
    }
}

function gojira_cron()
{
    //Location::removeUselessDumbLocations();

    if (variable_get('cron_update_search_index_where_needed')) {
        // index all the nodes that need indexing for the search
        Search::getInstance()->indexNeeded(1000);
    }


    if (variable_get('cron_check_subscriptions')) {
        Subscriptions::checkSubscriptions();
    }

    if (variable_get('cron_restore_backup_locations')) {
        helper::restoreBackup(200, true);
    }
}

function gojira_form_alter(&$form, &$form_state, $form_id)
{
    if ($form_id === 'taxonomy_form_term') {
        $form['#submit'][] = '_taxonomy_form_term_submit';
    }

    if ($form_id == 'user_pass_reset') {
        $form['actions']['submit']['#prefix'] = '<span class="gbutton rounded noshadow left">';
        $form['actions']['submit']['#suffix'] = '</span>';
    }

    if ($form_id == 'user_login') {
        unset($form['name']['#description']);

        $form['pass']['#description'] = '<a href="/user/password" title="'.t('Click here if you forgot your password.').'">'.t('Click here if you forgot your password.').'</a>';

        // with register
        $form['actions']['submit']['#prefix'] = '<span class="gbutton rounded noshadow left gbutton_small">';
        $form['actions']['submit']['#suffix'] = '</span>';

        $form['#validate'][] = 'gojira_validate_login';
    }

    if (($form_id == 'user_profile_form') && (!user_access('administer')) && (current_path() != 'user/register')) {
        $form['#prefix'] = '<p>'.t('Here you can set a password for your account. If you forget this password of fail to set one, you can use the password reset form from the login page.').'</p>';

        unset($form['field_gojira_group']);
        unset($form['field_big']);
        unset($form['field_show_hints']);
        unset($form['field_address_streetnumber']);
        unset($form['field_address_city']);
        unset($form['field_address_street']);
        unset($form['field_search_favorites']);
        unset($form['field_has_multiple_locations']);
        unset($form['field_user_validated']);
        unset($form['field_agree_conditions']);
        unset($form['field_search_global']);
        unset($form['field_selected_location']);
        unset($form['field_seen_tutorial']);
        unset($form['field_user_not_imported']);
        unset($form['field_user_title']);
        unset($form['field_is_doctor']);
        unset($form['field_selected_map']);
        unset($form['field_user_city']);
        unset($form['field_user_street']);
        unset($form['field_user_housenumber']);
        unset($form['field_user_postcode']);
        unset($form['field_own_labels']);

        $form['account']['mail']['#disabled'] = true; // is disabled because of the imported users who can't change there email, can't remove it
        $form['account']['mail']['#description'] = '';
        unset($form['account']['current_pass']);

        $form['account']['pass']["#required"] = true;

        $form['actions']['submit']['#prefix'] = '<span class="gbutton rounded noshadow right">';
        $form['actions']['submit']['#suffix'] = '</span>';

        $form['#submit'][] = '_password_recover_submit';
    }

    return $form;
}

/**
 * Checks if a synonym get's saved and puts the (by parent) related locations up for indexing
 *
 * @param $form
 * @param $form_state
 */
function _taxonomy_form_term_submit($form, &$form_state)
{
    if($_POST['parent'][0] !== '0') {

        // i am a synonym that get's saved.
        $parentId = $_POST['parent'][0];

        // All locations that use this the parent term need to be put up for reindexing. This way they will get the new synonym in the searchindex
        db_query("UPDATE `node` SET `indexed` = '0' WHERE `type` = 'location' and `nid` in (select entity_id from field_data_field_location_labels where field_location_labels_tid = :tid)", array(':tid'=>$parentId));
    }
}

// user form when logged in
function _password_recover_submit($form, &$form_state)
{
    $form_state['redirect'] = '/passwordthanks';
}

function gojira_custom_theme()
{
    if (arg(0) == 'gojirareport') {
        return 'seven';
    }
}


/**
* Extra validator for the login page
* added in the form alter hook
*
* @param array $form
* @param array $form_state
*/
function gojira_validate_login($form, &$form_state)
{
    $account = user_load_by_name(trim($form_state['values']['name']));
    if ($account) {
        // Allow alternate password hashing schemes.
        require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
        if (user_check_password(trim($form_state['values']['pass']), $account)) {
            global $user;
            $user = user_load($account->uid);
            $login_array = array('name' => trim($form_state['values']['name']));
            user_login_finalize($login_array);
        }
    }
}
